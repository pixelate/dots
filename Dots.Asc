Global G_MAX_ENEMIES
G_MAX_ENEMIES=64
Dim G_ENEMIES_STEP(G_MAX_ENEMIES-1)

Global G_ROWS,G_COLUMNS,G_STEPS,G_CURRENT_STEP,G_DIR
Global G_GRID_SPACING,G_GRID_WIDTH,G_GRID_HEIGHT,G_GRID_X,G_GRID_Y
Global G_ENEMIES_STEP(),G_ENEMIES_LAST_INDEX
Global G_GAME_STATE
Global G_LOOP_COUNTER,G_SPAWN_RATE
Global G_EXIT
Global G_SCORE

Rem 0:Up 1:Right 2:Down 3:Left 
G_DIR=1

Rem 0:Game over 1:Running
G_GAME_STATE=1

Procedure P_RND_BOTTOM
End Proc[G_STEPS-G_COLUMNS+Rnd(G_COLUMNS-1)]

P_SETUP_SCREEN
P_GENERATE_LEVEL
P_RESET

Every 20 Proc P_EVERY

Do 
  P_READ_JOYSTICK_INPUT[1]
  Rem P_DEBUG_PALETTE
Loop 

Procedure P_SETUP_SCREEN
  Screen Close 0
  Screen Open 1,320,200,8,Lowres
  Paper 0
  Pen 5
  Curs Off 
  Cls 0
  Colour 1,$333
  Colour 2,$E08
  Colour 4,$27F
  Colour 5,$FFF
End Proc

Procedure P_GENERATE_LEVEL
  G_ROWS=Rnd(12)+4
  G_COLUMNS=Rnd(12)+4
  G_STEPS=G_ROWS*G_COLUMNS
  G_GRID_SPACING=8
  G_GRID_WIDTH=G_COLUMNS*G_GRID_SPACING
  G_GRID_HEIGHT=G_ROWS*G_GRID_SPACING
  G_GRID_X=Screen Width/2-G_GRID_WIDTH/2
  G_GRID_Y=Screen Height/2-G_GRID_HEIGHT/2
End Proc

Procedure P_READ_JOYSTICK_INPUT[PRT]
  If Jleft(PRT)
    G_DIR=3
  Else If Jright(PRT)
    G_DIR=1
  Else If Jup(PRT)
    G_DIR=0
  Else If Jdown(PRT)
    G_DIR=2
  End If 

  If G_GAME_STATE=0
    If Fire(1)=-1
      Wait Vbl 
      Cls 0
      Fade 1,$0
      Pen 5
      P_GENERATE_LEVEL
      P_RESET
      G_GAME_STATE=1
    End If 
  End If 
End Proc

Procedure P_RESET
  G_CURRENT_STEP=1
  G_LOOP_COUNTER=1
  P_RND_SPAWN_RATE
  G_ENEMIES_LAST_INDEX=0
  P_RND_BOTTOM
  G_ENEMIES_STEP(0)=Param
  G_DIR=1
  P_SET_EXIT
  G_SCORE=0
  G_GAME_STATE=1
End Proc

Procedure P_SET_EXIT
  PREV_EXIT=G_EXIT
  Repeat 
    G_EXIT=Rnd(G_STEPS-1)+1
  Until G_EXIT<>G_CURRENT_STEP and G_EXIT<>PREV_EXIT
End Proc

Procedure P_RND_SPAWN_RATE
  G_SPAWN_RATE=Rnd(Min(G_COLUMNS,G_ROWS))
End Proc

Procedure P_DRAW_GRID
  S=1
  For R=0 To G_ROWS-1
    For C=0 To G_COLUMNS-1
      Ink 1
      If S=G_CURRENT_STEP
        Ink 2
      Else If S=G_EXIT
        Ink 3
      Else 
        For E=0 To G_ENEMIES_LAST_INDEX
          If S=G_ENEMIES_STEP(E)
            If G_CURRENT_STEP<>G_ENEMIES_STEP(E)
              Ink 4
              Exit 
            End If 
          End If 
        Next E
      End If 
      POS_X=G_GRID_X+C*G_GRID_SPACING
      POS_Y=G_GRID_Y+R*G_GRID_SPACING
      Bar POS_X-1,POS_Y-1 To POS_X+1,POS_Y+1
      Inc S
    Next C
  Next R
End Proc

Procedure P_EVERY
  If G_GAME_STATE=1
    P_STEP_PLAYER
    P_STEP_ENEMIES
    P_CHECK_COLLISIONS
    P_CHECK_EXIT
    Centre Str$(G_SCORE)
    P_DRAW_GRID
    P_INC_LOOP_COUNTER
  End If 
  P_INC_LOOP_COUNTER
  Every On 
End Proc

Procedure P_CHECK_COLLISIONS
  For E=0 To G_ENEMIES_LAST_INDEX
    If G_CURRENT_STEP=G_ENEMIES_STEP(E)
      P_DRAW_GRID
      Boom 
      Fade 1,$FFF
      G_GAME_STATE=0
      Pen 1
    End If 
  Next E
End Proc

Procedure P_CHECK_EXIT
  If G_CURRENT_STEP=G_EXIT
    P_SET_EXIT
    Add G_SCORE,10
  End If 
End Proc

Procedure P_INC_LOOP_COUNTER
  Inc G_LOOP_COUNTER
  If G_LOOP_COUNTER>G_SPAWN_RATE
    G_LOOP_COUNTER=1
    P_SPAWN_ENEMY
    P_RND_SPAWN_RATE
  End If 
End Proc

Procedure P_SPAWN_ENEMY
  If G_ENEMIES_LAST_INDEX+1<G_MAX_ENEMIES
    Inc G_ENEMIES_LAST_INDEX
    P_RND_BOTTOM
    G_ENEMIES_STEP(G_ENEMIES_LAST_INDEX)=Param
  End If 
End Proc

Procedure P_STEP_PLAYER
  P_NEXT_STEP[G_DIR,G_CURRENT_STEP]
  G_CURRENT_STEP=Param
  Bell Min(G_CURRENT_STEP,96)
End Proc

Procedure P_STEP_ENEMIES
  For E=0 To G_ENEMIES_LAST_INDEX
    P_NEXT_STEP[0,G_ENEMIES_STEP(E)]
    G_ENEMIES_STEP(E)=Param
  Next E
End Proc

Procedure P_NEXT_STEP[D,S]
  If D=0
    If S>G_COLUMNS
      S=S-G_COLUMNS
    Else 
      S=G_STEPS-G_COLUMNS+S
    End If 
  Else If D=1
    If S mod G_COLUMNS=0
      S=S-G_COLUMNS+1
    Else 
      Inc S
    End If 
  Else If D=2
    If S<=G_STEPS-G_COLUMNS
      Add S,G_COLUMNS
    Else If S=G_STEPS
      S=G_COLUMNS
    Else 
      S=S mod G_COLUMNS
    End If 
  Else If D=3
    If S mod G_COLUMNS=1
      S=S+G_COLUMNS-1
    Else 
      Dec S
    End If 
  End If 
End Proc[S]
